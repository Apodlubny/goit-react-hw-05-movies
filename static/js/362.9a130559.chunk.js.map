{"version":3,"file":"static/js/362.9a130559.chunk.js","mappings":"uMAEMA,GAAUC,EAAAA,EAAAA,IAAO,UAAPA,CAAH,sEAKAC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,SAACH,EAAD,UAAUG,GAClB,C,4ICPYC,GAAOH,EAAAA,EAAAA,IAAO,KAAPA,CAAH,uCAIJI,GAAWJ,EAAAA,EAAAA,IAAO,KAAPA,CAAH,qGAKRK,GAAOL,EAAAA,EAAAA,IAAO,IAAPA,CAAH,4G,SCTJM,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,SAACJ,EAAD,UACGI,GACCA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,OAAhB,OACV,UAACP,EAAD,YACE,qCAAaO,MACb,SAACN,EAAD,UAAOI,MAFMC,EADL,KAQnB,ECyBD,EAjCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aAAiBH,EAAU,YACxBI,MAAK,SAAAC,GACCA,EAAIC,QAAQC,QAIjBZ,EAAWU,EAAIC,SACfT,EAAU,aAJRA,EAAU,YAKb,IACAW,OAAM,SAAAC,GACLV,EAAgB,uDAChBF,EAAU,WACX,GACJ,GAAE,CAACG,KAGF,UAACjB,EAAA,EAAD,WACc,cAAXa,IACC,oEAEU,aAAXA,IAAyB,SAACR,EAAD,CAAYC,QAASA,IACnC,aAAXO,IAAyB,uBAAIE,MAGnC,C,6FCnCKY,EAAU,mCACVC,EAAW,gCAEXC,EAAW,mCAAG,6GAESC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC5DG,OAAQ,CACNC,QAASL,KAJH,cAENM,EAFM,yBAOHA,EAAOC,MAPJ,sCASJ,IAAIC,MAAM,KAAMC,SATZ,yDAAH,qDAaLC,EAAe,mCAAG,WAAMC,GAAN,gGAEGR,EAAAA,GAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACtDG,OAAQ,CACNO,MAAOA,EACPN,QAASL,KALG,cAEZM,EAFY,yBAQTA,EAAOC,MARE,sCAUV,IAAIC,MAAM,KAAMC,SAVN,yDAAH,sDAcbG,EAAY,mCAAG,WAAO9B,GAAP,4FAAW+B,EAAX,+BAAkB,GAAlB,kBAEMV,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BnB,GAA9B,OAAmC+B,GAAQ,CAC9DT,OAAQ,CACNC,QAASL,KAJE,cAETM,EAFS,yBAORA,EAAOC,MAPC,sCAST,IAAIC,MAAM,KAAMC,SATP,yDAAH,sDAaHhB,EAAM,CACjBS,YAAAA,EACAQ,gBAAAA,EACAE,aAAAA,E","sources":["components/Container/Container.jsx","components/Reviews/Reviews.styled.js","components/Reviews/ReviewsList.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled('section')`\n  padding: 20px 30px;\n  text-align: center;\n`;\n\nexport const Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};","import styled from 'styled-components';\n\nexport const List = styled('ul')`\n  padding: 0;\n`;\n\nexport const ListItem = styled('li')`\n  text-align: left;\n  list-style: none;\n  border-bottom: 1px solid black;\n`;\nexport const Text = styled('p')`\n  width: 80%;\n  font-size: 14px;\n  letter-spacing: 0.05rem;\n  line-height: 1.3;\n`;","import { List, ListItem, Text } from './Reviews.styled';\n\nexport const ReviewList = ({ reviews }) => {\n  return (\n    <List>\n      {reviews &&\n        reviews.map(({ content, id, author }) => (\n          <ListItem key={id}>\n            <h4>Author: {author}</h4>\n            <Text>{content}</Text>\n          </ListItem>\n        ))}\n    </List>\n  );\n};","import { Container } from 'components/Container/Container';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API } from 'services/api';\nimport { ReviewList } from './ReviewsList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [errorMessage, setErrorMessage] = useState('');\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    API.getMovieById(moviesId, '/reviews')\n      .then(res => {\n        if (!res.results.length) {\n          setStatus('not found');\n          return;\n        }\n        setReviews(res.results);\n        setStatus('resolved');\n      })\n      .catch(err => {\n        setErrorMessage(\"Sorry, we can't find information about this movie..\");\n        setStatus('rejected');\n      });\n  }, [moviesId]);\n\n  return (\n    <Container>\n      {status === 'not found' && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      {status === 'resolved' && <ReviewList reviews={reviews} />}\n      {status === 'rejected' && <p>{errorMessage}</p>}\n    </Container>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = '10b545eab9ebb9893cee2aedec285791';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async()=>{\n    try{\n        const result = await axios.get(`${BASE_URL}trending/movie/day`, {\n            params: {\n              api_key: API_KEY,\n            },\n          });\n          return result.data;\n        } catch (error) {\n          throw new Error(error.message);\n        }\n      };\n\n      const getSearchMovies = async query =>{\n        try{\n            const result = await axios.get(`${BASE_URL}search/movie`, {\n                params: {\n                  query: query,\n                  api_key: API_KEY,\n                },\n              });\n              return result.data;\n            } catch (error) {\n              throw new Error(error.message);\n            }\n        };\n\n        const getMovieById = async (id, info = '') => {\n            try {\n              const result = await axios.get(`${BASE_URL}movie/${id}${info}`, {\n                params: {\n                  api_key: API_KEY,\n                },\n              });\n              return result.data;\n            } catch (error) {\n              throw new Error(error.message);\n            }\n          };\n\n          export const API = {\n            getTrending,\n            getSearchMovies,\n            getMovieById,\n          };\n      "],"names":["Wrapper","styled","Container","children","List","ListItem","Text","ReviewList","reviews","map","content","id","author","useState","setReviews","status","setStatus","errorMessage","setErrorMessage","moviesId","useParams","useEffect","API","then","res","results","length","catch","err","API_KEY","BASE_URL","getTrending","axios","params","api_key","result","data","Error","message","getSearchMovies","query","getMovieById","info"],"sourceRoot":""}